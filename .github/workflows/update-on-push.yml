name: Auto Deploy on Push (Both VMs)

on:
  push:
    branches:
      - main

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    name: Deploy to Dev VM

    steps:
      - name: Deploy to Dev VM
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEV_VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.DEV_VM_SSH_KEY }}
          script: |
            cd ~/PNG-Provisioner
            
            git pull origin main
            
            cd dev/
            
            # Login to GHCR
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Deploy (using .env from parent directory)
            if [ "${{ steps.info.outputs.service }}" = "all" ]; then
              docker compose pull
              docker compose up -d --remove-orphans
            else
              docker compose pull ${{ steps.info.outputs.service }}-api
              docker compose up -d ${{ steps.info.outputs.service }}-api
            fi
            
            # Cleanup
            docker image prune -a -f

  deploy-prod:
    runs-on: ubuntu-latest
    name: Deploy to Prod VM

    steps:
      - name: Deploy to Prod VM
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            cd ~/PNG-Provisioner
            
            git pull origin main
            
            cd prod/
            
            # Login to GHCR
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Deploy (using .env from parent directory)
            if [ "${{ steps.info.outputs.service }}" = "all" ]; then
              docker compose pull
              docker compose up -d --remove-orphans
            else
              docker compose pull ${{ steps.info.outputs.service }}-api
              docker compose up -d ${{ steps.info.outputs.service }}-api
            fi
            
            # Cleanup
            docker image prune -a -f